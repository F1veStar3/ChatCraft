name: CICD

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          docker --version
          docker compose version

      - name: Build Docker images
        run: docker compose -f docker-compose.dev.yml build

      - name: Run tests
        run: docker compose -f docker-compose.dev.yml run backend-dev python manage.py test

      - name: Tear down Docker
        run: docker compose -f docker-compose.dev.yml down

#  build:
#    runs-on: [ ubuntu-latest ]
#    defaults:
#      run:
#        working-directory: './ChatCraft'
#    steps:
#      - name: Checkout source
#        uses: actions/checkout@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Build Docker image
#        run: docker build -t myapp:latest .
#      - name: Save Docker image as tar archive
#        run: docker save myapp:latest -o myapp.tar
#      - name: Upload Docker image as artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: myapp-image
#          path: myapp.tar

  deploy:
    runs-on: self-hosted
    steps:
      - name: Build Docker images
        run: docker-compose -f docker-compose.dev.yml build

      - name: Create environment file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DEBUG=${{ secrets.DEBUG }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "IP_UBUNTU=${{ secrets.IP_UBUNTU }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}" >> .env
          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "OPENAI_BASE_URL=${{ secrets.OPENAI_BASE_URL }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}" >> .env
          echo "AWS_S3_REGION_NAME=${{ secrets.AWS_S3_REGION_NAME }}" >> .env

      - name: Set .env file
        run: cp .env /home/ubuntu/docker_data/dev

      - name: Run Docker container
        run: sudo docker compose -f /home/ubuntu/docker_data/dev/docker-compose.dev.yml up -d


